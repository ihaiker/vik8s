apiVersion: v1
kind: Namespace
metadata:
  name: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik
    app.kubernetes.io/part-of: ingress-traefik

{{ .Repo.Secret }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: ingress-traefik

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: {{ .Replicas }}
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      {{ if .HostNetwork}}hostNetwork: true{{end}}
    {{ $length := len .NodeSelectors }} {{ if gt $length 0 }}
      nodeSelector:
      {{ range $key, $value := .NodeSelectors }}
        {{ $key }}: {{ $value }}
      {{ end }}
    {{ end }}
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
{{ .Repo.PullSecrets | indent 6 }}
      containers:
        - image: {{.Repo}}traefik:v{{.Version}}
          name: traefik-ingress-lb
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: admin
              containerPort: 8080
          args:
            - --api
            - --kubernetes
            - --logLevel=WARN
            #- --defaultentrypoints=http,https
            - --entrypoints=Name:https Address::443 TLS
            - --entrypoints=Name:http Address::80
            - --insecureskipverify
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik
    app.kubernetes.io/part-of: ingress-traefik
spec:
  {{ if or (ge .NodePortHttp 0) (ge .NodePortHttps 0) }}
  type: NodePort
  {{ end }}
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      {{ if gt .NodePortHttp 0 }}nodePort: {{.NodePortHttp}} {{ end }}
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
      {{ if gt .NodePortHttps 0 }}nodePort: {{.NodePortHttps}} {{ end }}


{{ if .IngressUI }}
{{ if .AuthUI }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ingress-traefik-webui-auth
  namespace: ingress-traefik
data:
  auth: {{ base64 .AuthUser ":" .AuthPassword }}
{{ end }}
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-ui
  namespace: ingress-traefik
  labels:
    app.kubernetes.io/name: ingress-traefik
    app.kubernetes.io/part-of: ingress-traefik
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - name: adminui
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: ingress-traefik
  annotations:
    kubernetes.io/ingress.class: traefik
{{ if .AuthUI }}
    traefik.ingress.kubernetes.io/auth-type: "basic"
    traefik.ingress.kubernetes.io/auth-secret: "ingress-traefik-webui-auth"
{{ end }}
spec:
  rules:
    - host: {{ .IngressUI }}
      http:
        paths:
          - backend:
              serviceName: traefik-ingress-ui
              servicePort: 8080
{{ end }}