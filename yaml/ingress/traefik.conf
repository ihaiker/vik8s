namespace ingress-traefik;

{{.Repo.ReduceSecret}}

ClusterRole:rbac.authorization.k8s.io/v1beta1 traefik-ingress-controller {
    rules {
        apiGroups: "";
        resources: services endpoints secrets;
        verbs: get list watch;
    }
    rules {
        apiGroups: extensions;
        resources: ingresses;
        verbs: get list watch;
    }
    rules {
        apiGroups: extensions;
        resources: "ingresses/status";
        verbs: update;
    }
}

ClusterRoleBinding:rbac.authorization.k8s.io/v1beta1 traefik-ingress-controller {
    roleRef {
        apiGroup: rbac.authorization.k8s.io;
        kind: ClusterRole;
        name: traefik-ingress-controller;
    }
    subjects {
        kind: ServiceAccount;
        name: traefik-ingress-controller;
        namespace: ingress-traefik;
    }
}

ServiceAccount:v1 traefik-ingress-controller;

deployment traefik-ingress-controller {
    replicas: "{{.Replicas}}";
    hostNetwork: "{{.HostNetwork}}";
    nodeSelector {
       {{ range $key, $value := .NodeSelectors }}
           {{ $key }}: {{ $value }};
       {{ end }}
    }
    serviceAccountName: traefik-ingress-controller;
    terminationGracePeriodSeconds: 60;
    #{{.Repo.ReducePullSecrets}}
    containers traefik-ingress-lb "{{.Repo}}traefik:{{.Version}}" {
        args: "--api" "--kubernetes" "--logLevel=WARN"
        "--entrypoints=Name:https Address::443 TLS"
        "--entrypoints=Name:http Address::80"
        "--insecureskipverify";
        #--defaultentrypoints=http,https
        ports {
            http 80;
            https 443;
            admin 8080;
        }
    }
}

service deployment:traefik-ingress-controller traefik-ingress-service
    "{{if or (ge .NodePortHttp 0) (ge .NodePortHttps 0)}}NodePort{{end}}" {
    ports {
        http 80:80 "{{if gt .NodePortHttp 0}}{{.NodePortHttp}}{{end}}";
        https 443:443 "{{if gt .NodePortHttps 0}}{{.NodePortHttps}}{{end}}";
    }
}


{{if .IngressUI}}
{{if .AuthUI}}
secret ingress-traefik-webui-auth Opaque {
    auth: '{{ base64 .AuthUser ":" .AuthPassword }}';
}
{{end}}

service deployment:traefik-ingress-controller traefik-ingress-ui {
    ports {
        adminui 8080:8080/TCP;
    }
}

ingress traefik-web-ui {
    annotations {
        kubernetes.io/ingress.class: traefik;
        {{if .AuthUI}}
        traefik.ingress.kubernetes.io/auth-type: "basic";
        traefik.ingress.kubernetes.io/auth-secret: "ingress-traefik-webui-auth";
        {{end}}
    }
    rules "{{ .IngressUI }}" {
        http paths {
            serviceName: traefik-ingress-ui;
            servicePort: 8080;
        }
    }
}
{{end}}

