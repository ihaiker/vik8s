{{ if not .EnableInsecureLogin }}
secret kubernetes-dashboard-tls "kubernetes.io/tls" {
    tls.crt: "{{.TLSCert}}";
    tls.key: "{{.TLSKey}}";
}
{{ end }}

ingress dashboard-ingress {
    annotations {
        nginx.ingress.kubernetes.io/ingress.class: nginx;

        {{ if not .EnableInsecureLogin }}
        nginx.ingress.kubernetes.io/proxy-ssl-protocols: "https";
        nginx.ingress.kubernetes.io/proxy-ssl-verify: "false";
        nginx.ingress.kubernetes.io/backend-protocol: "https";
        nginx.ingress.kubernetes.io/ssl-redirect: "true";
        nginx.ingress.kubernetes.io/rewrite-target: /;
        nginx.ingress.kubernetes.io/secure-backends: "true";

        ingress.kubernetes.io/protocol: "https";
        traefik.ingress.kubernetes.io/redirect-entry-point: https;
        traefik.ingress.kubernetes.io/frontend-entry-points: https;
        {{ end }}

        {{ if .InsecureHeader }}
        ingress.kubernetes.io/custom-request-headers: "Authorization: Bearer {{.Token}}";
        nginx.ingress.kubernetes.io/configuration-snippet: 'proxy_set_header Authorization "Bearer {{.Token}}"';
        {{ end }}
    }

    tls kubernetes-dashboard-tls;

    rules "{{.Ingress}}" {
        http paths {
            serviceName: kubernetes-dashboard;
            servicePort: "{{if not .EnableInsecureLogin}}8443{{else}}9090{{end}}";
        }
    }
}