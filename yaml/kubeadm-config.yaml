apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: {{.Kubeadm.Version}}
controlPlaneEndpoint: "{{.Kubeadm.ApiServer}}:6443"
imageRepository: {{.Kubeadm.Repo}}
networking:
  podSubnet: {{.Kubeadm.PodCIDR}}
  serviceSubnet: {{.Kubeadm.SvcCIDR}}
apiServer:
  certSANs:
    - 127.0.0.1
    - {{.Kubeadm.ApiServer}}
    - {{.Kubeadm.ApiServerVIP}}{{ range .Masters }}
    - {{.Hostname}}
    - {{.Host}}{{ end }}
  extraArgs:
    feature-gates: TTLAfterFinished=true
  extraVolumes:
    - name: localtime
      hostPath: /etc/localtime
      mountPath: /etc/localtime
      readOnly: true
      pathType: File
controllerManager:
  extraArgs:
    feature-gates: TTLAfterFinished=true
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      name: localtime
      readOnly: true
      pathType: File
scheduler:
  extraArgs:
    feature-gates: TTLAfterFinished=true
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      name: localtime
      readOnly: true
      pathType: File

{{ if .Etcd.External }}
etcd:
  external:
    endpoints: {{ range .Etcd.Nodes }}
      - https://{{.}}{{ end }}
    caFile: "/etc/kubernetes/pki/etcd/ca.crt"
    certFile: "/etc/kubernetes/pki/etcd/apiserver-etcd-client.crt"
    keyFile: "/etc/kubernetes/pki/etcd/apiserver-etcd-client.key"
{{ end }}

---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "ipvs"
#ipvs:
#  excludeCIDRs:
#    - "excludeCIDR"
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{(index .Masters 0).Host }}"
