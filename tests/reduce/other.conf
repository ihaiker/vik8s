
namespace vik8s;

CustomResourceDefinition:apiextensions.k8s.io/v1beta1 bgpconfigurations.crd.projectcalico.org {
    scope Cluster;
    group crd.projectcalico.org;
    version v1;
    names {
        kind BGPConfiguration;
        plural bgpconfigurations;
        singular bgpconfiguration;
    }
}


PodSecurityPolicy:policy/v1beta1 psp.flannel.unprivileged {
    annotations {
        seccomp.security.alpha.kubernetes.io/allowedProfileNames docker/default;
        seccomp.security.alpha.kubernetes.io/defaultProfileName docker/default;
        apparmor.security.beta.kubernetes.io/allowedProfileNames runtime/default;
        apparmor.security.beta.kubernetes.io/defaultProfileName runtime/default;
    }
    privileged false;
    volumes configMap secret emptyDir hostPath;

    allowedHostPaths {
        pathPrefix "/etc/cni/net.d";
    }
    allowedHostPaths pathPrefix=/etc/kube-flannel;
    allowedHostPaths pathPrefix=/run/flannel;
    
    readOnlyRootFilesystem false;
    runAsUser {
        rule RunAsAny;
    }
    supplementalGroups {
        rule RunAsAny;
    }
    fsGroup rule=RunAsAny;
    # Privilege Escalation
    allowPrivilegeEscalation false;
    defaultAllowPrivilegeEscalation false;
    # Capabilities
    allowedCapabilities 'NET_ADMIN';
    # Host namespaces
    hostPID false;
    hostIPC false;
    hostNetwork true;
    hostPorts {
        min 0;
        max 65535;
    }
    # SELinux
    seLinux rule=RunAsAny;
}


ClusterRole:rbac.authorization.k8s.io/v1 calico-kube-controllers {
    rules apiGroups= {
        resources nodes;
        verbs watch list get;
    }
    rules apiGroups= {
        resources pods;
        verbs get;
    }
    rules apiGroups=crd.projectcalico.org {
        resources ippools;
        verbs list;
    }
    rules apiGroups=crd.projectcalico.org {
        resources blockaffinities ipamblocks ipamhandles;
        verbs get list create update delete;
    }

    rules {
        apiGroups "crd.projectcalico.org";
        resources hostendpoints;
        verbs get list create update delete;
    }
    rules {
        apiGroups "crd.projectcalico.org";
        resources clusterinformations;
        verbs get create update;
    }
    rules {
        apiGroups "crd.projectcalico.org";
        resources kubecontrollersconfigurations;
        verbs get create update watch;
    }
}